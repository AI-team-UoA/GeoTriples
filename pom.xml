<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.linkedeodata.geotriples</groupId>
	<artifactId>geotriples</artifactId>
	<version>1.1.6-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>GeoTriples Tool</name>
	<description>GeoTriples is a tool for publishing geospatial data as Linked Open Data</description>
	<url>http://projects.cwi.nl/LEO/Geotriples</url>
	<inceptionYear>2014</inceptionYear>
	<licenses>
		<license>
			<name>Mozilla Public License, v. 2.0</name>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<properties>
		<slf4j.version>1.7.25</slf4j.version>
		<geotools.version>20.0</geotools.version>
		<junit.version>4.11</junit.version>
		<jts.version>1.16.0</jts.version>
		<skipTests>true</skipTests>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.targetEncoding>UTF-8</project.build.targetEncoding>
		<github.global.server>github-geotriples</github.global.server>
		<maven.javadoc.skip>true</maven.javadoc.skip>
	</properties>
	<modules>
        <module>geotriples-processors</module>
        <module>geotriples-evaluation</module>
        <module>geotriples-core</module>
        <module>geotriples-gui</module>
        <module>geotriples-ontop</module>
		<module>geotriples-spark</module>
	</modules>
	<dependencies>


    </dependencies>


	<build>
		<plugins>

			<!-- create jar-dependencies folder
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin> -->


			<!-- create a JAR with the dependencies. WARNING it overwrites Jar's inner files and leads to errors -
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>>eu.linkedeodata.geotriples.GeoTriplesCMD</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin> -->

			<!--
				shade plugin, creates a JAR without overwriting the inner files.
				It contains two executions - one that contains all the JAR files
				 and a cluster friendly (excludes Spark, Hadoop Jar files).
				-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<id>standalone-jar</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>stand-alone</shadedClassifierName>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<finalName>geotriples-dependencies</finalName>
							<transformers>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>eu.linkedeodata.geotriples.GeoTriplesCMD</mainClass>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>

								<transformer
										implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.handlers</resource>
								</transformer>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.schemas</resource>
								</transformer>
							</transformers>
						</configuration>
					</execution>
					<execution>
						<id>cluster-jar</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>stand-alone</shadedClassifierName>
							<artifactSet>
								<excludes>
									<exclude>org.apache.spark</exclude>
									<exclude>org.apache.hadoop</exclude>

									<exclude>org.geotools:gt-api</exclude>
									<exclude>org.geotools:gt-main</exclude>
								</excludes>
							</artifactSet>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<finalName>geotriples-spark</finalName>
							<transformers>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>eu.linkedeodata.geotriples.GeoTriplesCMD</mainClass>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>

								<transformer
										implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.handlers</resource>
								</transformer>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.schemas</resource>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>-->

		</plugins>
	</build>
	

</project>
